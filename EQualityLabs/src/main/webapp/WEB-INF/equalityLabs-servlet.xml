<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
http://www.springframework.org/schema/context  
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx/ http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">


	<context:component-scan
		base-package="com.prakat"></context:component-scan>
	<mvc:resources mapping="/static/**" location="/static/" />
	<mvc:resources mapping="/resources/**"
		location="/resources/" />
	<mvc:resources mapping="/WebContent/**"
		location="/WebContent/" />
	<mvc:resources mapping="/images/**"
		location="file:///C:/Users/Prakat-L033/workspace/equality09Oct2017/EQualityLabs/myPieChart.png" />

	<context:property-placeholder
		location="classpath:config.properties" />
	<context:property-placeholder
		location="classpath:log4j.properties" />

	<mvc:annotation-driven />


	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <bean id ="eqdaoImpl" class ="com.prakat.DAOImpl.EQualityLabsDAOImpl"> -->
		<property name="prefix" value="/WEB-INF/jsp/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="location"> <value>classpath:/config.properties</value> </property> 
		</bean> -->
	<!-- <bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" 
		id="dataSource"> <property name="driverClassName" value="${database.driver}"></property> 
		<property name="url" value="${database.url}"></property> <property name="username" 
		value="${database.user}"></property> <property name="password" value="${database.password}"></property> 
		</bean> -->

	<bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<property name="driverClassName"
			value="com.mysql.cj.jdbc.Driver"></property>
		<property name="url"
			value="jdbc:mysql://localhost:3306/equalityLabs_dev?allowPublicKeyRetrieval=true&amp;useSSL=false"></property>
		<property name="username" value="root"></property>
		<property name="password" value="Prakat123"></property>
	</bean>

	<!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource"/> <property name="configurationClass" 
		value="org.hibernate.cfg.AnnotationConfiguration"/> <property name="hibernateProperties" 
		ref="hibernatePropertiesConfigurer"/> <property name="packagesToScan" value="com.prakat.model.EQualityLabsVo"/> 
		</bean> -->
	<bean id="entityManagerFactoryBean"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter">
			<bean
				class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>
	<!-- SET default mail properties -->
	<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.prakat.in" />
		<property name="port" value="25" />
		<property name="username" value="rhss@prakat.in" />
		<property name="password" value="Prakat123" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	<bean id="emailSender" class="com.prakat.util.EmailSender" />

	<bean id="dao" class="com.prakat.dao.impl.TenonApiDaoImpl" />
	<bean id="tenonService"
		class="com.prakat.service.impl.TenonApiReportServiceImpl" />
	<bean id="acheckerService"
		class="com.prakat.service.impl.ACheckerReportServiceImpl" />

	<bean id="util" class="com.prakat.util.EQualityLabsUtil" />
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="annotatedClasses">
			<list>
				<value>com.prakat.model.EQualityLabsVo</value>
				<value>com.prakat.model.UserDetailsVo</value>
				<value>com.prakat.model.TenonApiVo</value>
				<value>com.prakat.model.ResultsetVo</value>
				<value>com.prakat.model.WebAimApiVo</value>
				<value>com.prakat.model.TenonByWCAG</value>
				<value>com.prakat.model.AcheckerResultsetVo</value>
				<value>com.prakat.model.ACheckerVo</value>
				<value>com.prakat.model.ResultsetVo</value>
				<value>com.prakat.model.TenonApiVo</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}  </prop>
			</props>
		</property>
	</bean>


	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="dataSource" ref="dataSource" />
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- This transaction manager is appropriate for applications that use a 
		single JPA EntityManagerFactory for transactional data access. JTA (usually 
		through JtaTransactionManager) is necessary for accessing multiple transactional 
		resources within the same transaction. -->
	<!-- <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
		<property name="entityManagerFactory" ref="entityManagerFactoryBean" /> </bean> -->
</beans>